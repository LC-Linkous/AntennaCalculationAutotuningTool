# ----------------------------------------------------
 # ANSYS HFSS script generated by AntennaCAT version 2.0 
#  17/08/23
# ----------------------------------------------------
# probefed patch antenna generated through GUI
# ----------------------------------------------------

import ScriptEnv 

projectSaveLoc="C:/Users/linkouslc/Desktop/GeneratedHFSSProject.aedt"
saveBase="C:/Users/linkouslc/Desktop/BatchData/"

ScriptEnv.Initialize("Ansoft.ElectronicsDesktop") 
oDesktop.RestoreWindow() 
oProject = oDesktop.NewProject() 
oProject.InsertDesign("HFSS", "HFSSDesign1", "HFSS Terminal Network", "") 
oProject.SaveAs(projectSaveLoc, True) 

oProject.ChangeProperty(
	[
		"NAME:AllTabs",
		[
			"NAME:ProjectVariableTab",
			[
				"NAME:PropServers",
				"ProjectVariables"
			],
			[
				"NAME:NewProps",
				[
					"NAME:$width",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "38.04 mm"
				],
				[
					"NAME:$length",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "29.44 mm"
				],
				[
					"NAME:$ground_plane",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "2*$length"
				],
				[
					"NAME:$depth",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "1.6 mm"
				],
			    [
					"NAME:$x_0",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "$length/4"
				],
                [
					"NAME:$y_0",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "$width/2"
				],
				[
					"NAME:$pin",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "(0.96/2) mm"
				],
                [
					"NAME:$pinY",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "$length/2-$x_0"
				],
				[
					"NAME:$PTFE",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "(4.44/2) mm"
				],
				[
					"NAME:$coax_outer",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "(5.24/2) mm"
				],
				[
					"NAME:$coax_height",
					"PropType:="		, "VariableProp",
					"UserDef:="		, True,
					"Value:="		, "2.87 mm"
				]
			]
		]
	])
oDesign = oProject.SetActiveDesign("HFSSDesign1")
oEditor = oDesign.SetActiveEditor("3D Modeler")

# create ground plane
oEditor.CreateRectangle(
	[
		"NAME:RectangleParameters",
		"IsCovered:="		, True,
		"XStart:="		, "-$ground_plane/2",
		"YStart:="		, "-$ground_plane/2",
		"ZStart:="		, "-$depth",
		"Width:="		, "$ground_plane",
		"Height:="		, "$ground_plane",
		"WhichAxis:="		, "Z"
	],
	[
		"NAME:Attributes",
		"Name:="		, "ground_plane",
		"Flags:="		, "",
		"Color:="		, "(225 225 128)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, INSERT_GROUND_PLANE_MATERIAL ,
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

# create substrate
oEditor.CreateBox(
	[
		"NAME:BoxParameters",
		"XPosition:="		, "-$ground_plane/2",
		"YPosition:="		, "-$ground_plane/2",
		"ZPosition:="		, "-$depth",
		"XSize:="		, "$ground_plane",
		"YSize:="		, "$ground_plane",
		"ZSize:="		, "$depth"
	],
	[
		"NAME:Attributes",
		"Name:="		, "substrate",
		"Flags:="		, "",
		"Color:="		, "(143 175 143)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, INSERT_SUBSTRATE_MATERIAL ,
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

# create patch
oEditor.CreateRectangle(
	[
		"NAME:RectangleParameters",
		"IsCovered:="		, True,
		"XStart:="		, "-$width/2",
		"YStart:="		, "-$length/2",
		"ZStart:="		, "0mm",
		"Width:="		, "$width",
		"Height:="		, "$length",
		"WhichAxis:="		, "Z"
	],
	[
		"NAME:Attributes",
		"Name:="		, "patch",
		"Flags:="		, "",
		"Color:="		, "(225 225 128)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, "\"vacuum\"",
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

#INSERT_PROBE_FEED (several steps)
oEditor.CreateCylinder(
	[
		"NAME:CylinderParameters",
		"XCenter:="		, "0mm",
		"YCenter:="		, "$pinY",
		"ZCenter:="		, "-$depth",
		"Radius:="		, "$coax_outer",
		"Height:="		, "-$coax_height",
		"WhichAxis:="		, "Z",
		"NumSides:="		, "0"
	], 
	[
		"NAME:Attributes",
		"Name:="		, "outer_conductor",
		"Flags:="		, "",
		"Color:="		, "(255 255 0)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, "\"copper\"", 
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

oEditor.CreateCylinder(
	[
		"NAME:CylinderParameters",
		"XCenter:="		, "0mm",
		"YCenter:="		, "$pinY",
		"ZCenter:="		, "-$depth",
		"Radius:="		, "$PTFE",
		"Height:="		, "-$coax_height",
		"WhichAxis:="		, "Z",
		"NumSides:="		, "0"
	], 
	[
		"NAME:Attributes",
		"Name:="		, "cut1",
		"Flags:="		, "",
		"Color:="		, "(255 255 0)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, "\"vacuum\"", 
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

#subtract creates the 'CloneTo' under 'cut1'
oEditor.Subtract(
	[
		"NAME:Selections",
		"Blank Parts:="		, "ground_plane, outer_conductor",
		"Tool Parts:="		, "cut1"
	], 
	[
		"NAME:SubtractParameters",
		"KeepOriginals:="	, False
	])


oEditor.CreateCylinder(
	[
		"NAME:CylinderParameters",
		"XCenter:="		, "0mm",
		"YCenter:="		, "$pinY",
		"ZCenter:="		, "-$depth",
		"Radius:="		, "$PTFE",
		"Height:="		, "-$coax_height",
		"WhichAxis:="		, "Z",
		"NumSides:="		, "0"
	], 
	[
		"NAME:Attributes",
		"Name:="		, "coax_dielectric",
		"Flags:="		, "",
		"Color:="		, "(228 228 228)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, "\"Teflon (tm)\"", 
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

#pin cut
oEditor.CreateCylinder(
	[
		"NAME:CylinderParameters",
		"XCenter:="		, "0mm",
		"YCenter:="		, "$pinY",
		"ZCenter:="		, "0",
		"Radius:="		, "$pin",
		"Height:="		, "-$coax_height-$depth",
		"WhichAxis:="		, "Z",
		"NumSides:="		, "0"
	], 
	[
		"NAME:Attributes",
		"Name:="		, "pin_cut",
		"Flags:="		, "",
		"Color:="		, "(143 175 175)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, "\"vacuum\"", 
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])


oEditor.CreateCylinder(
	[
		"NAME:CylinderParameters",
		"XCenter:="		, "0mm",
		"YCenter:="		, "$pinY",
		"ZCenter:="		, "0",
		"Radius:="		, "$pin",
		"Height:="		, "-$coax_height-$depth",
		"WhichAxis:="		, "Z",
		"NumSides:="		, "0"
	], 
	[
		"NAME:Attributes",
		"Name:="		, "port", #this is actually "pin", but to troubleshoot a simulation error, it's being called "port"
		"Flags:="		, "",
		"Color:="		, "(255 255 0)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, "\"copper\"", 
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

oEditor.Subtract(
	[
		"NAME:Selections",
		"Blank Parts:="		, "coax_dielectric,substrate",
		"Tool Parts:="		, "pin_cut"
	], 
	[
		"NAME:SubtractParameters",
		"KeepOriginals:="	, False
	])

oEditor.CreateCircle(
	[
		"NAME:CircleParameters",
		"IsCovered:="		, True,
		"XCenter:="		, "0mm",
		"YCenter:="		, "$pinY",
		"ZCenter:="		, "-$depth-$coax_height",
		"Radius:="		, "$coax_outer",
		"WhichAxis:="		, "Z",
		"NumSegments:="		, "0"
	], 
	[
		"NAME:Attributes",
		"Name:="		, "excitation",
		"Flags:="		, "",
		"Color:="		, "(255 0 255)",
		"Transparency:="	, 0,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, "\"vacuum\"",
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

oEditor.CreateBox(
	[
		"NAME:BoxParameters",
		"XPosition:="		, "-$ground_plane",
		"YPosition:="		, "-$ground_plane",
		"ZPosition:="		, "-$ground_plane",
		"XSize:="		, "$ground_plane*2",
		"YSize:="		, "$ground_plane*2",
		"ZSize:="		, "$ground_plane*2"
	],
	[
		"NAME:Attributes",
		"Name:="		, "air_box",
		"Flags:="		, "",
		"Color:="		, "(128 255 255)",
		"Transparency:="	, 0.95,
		"PartCoordinateSystem:=", "Global",
		"UDMId:="		, "",
		"MaterialValue:="	, "\"vacuum\"",
		"SurfaceMaterialValue:=", "\"\"",
		"SolveInside:="		, True,
		"ShellElement:="	, False,
		"ShellElementThickness:=", "0mm",
		"IsMaterialEditable:="	, True,
		"UseMaterialAppearance:=", False,
		"IsLightweight:="	, False
	])

# Boundaries and excitation

oModule = oDesign.GetModule("BoundarySetup")
oModule.AssignFiniteCond(
	[
		"NAME:FiniteCond1",
		"Objects:="		, ["patch"],
		"UseMaterial:="		, True,
		"Material:="		, INSERT_CONDUCTOR_MATERIAL_BOUNDARY_SETUP ,
		"UseThickness:="	, False,
		"Roughness:="		, "0um",
		"InfGroundPlane:="	, False,
		"IsTwoSided:="		, False,
		"IsInternal:="		, True
	])
oModule.AssignFiniteCond(
	[
		"NAME:FiniteCond2",
		"Objects:="		, ["ground_plane"],
		"UseMaterial:="		, True,
		"Material:="		, INSERT_GROUND_PLANE_MATERIAL_BOUNDARY_SETUP ,
		"UseThickness:="	, False,
		"Roughness:="		, "0um",
		"InfGroundPlane:="	, False,
		"IsTwoSided:="		, False,
		"IsInternal:="		, True
	])

# generic lumped approach 
oModule.AutoIdentifyPorts(
	[
		"NAME:Faces", 
		148
	], False, 
	[
		"NAME:ReferenceConductors", 
		"outer_conductor"
	], "port1", True)


oModule.AssignRadiation(
	[
		"NAME:Rad1",
		"Objects:="		, ["air_box"],
		"IsFssReference:="	, False,
		"IsForPML:="		, False
	])


oProject.Save()
#end antenna generation



oModule = oDesign.GetModule("RadField") 
oModule.InsertInfiniteSphereSetup( 
[ 
"NAME:Infinite Sphere1", 
"UseCustomRadiationSurface:=", False, 
"CSDefinition:=" , "Theta-Phi", 
"Polarization:=" , "Linear", 
"ThetaStart:=" , "0deg", 
"ThetaStop:=" , "180deg", 
"ThetaStep:=" , "2deg", 
"PhiStart:=" , "-180deg", 
"PhiStop:=" , "180deg", 
"PhiStep:=" , "2deg", 
"UseLocalCS:=" , False 
]) 
oModule = oDesign.GetModule("AnalysisSetup") 
oModule.InsertSetup("HfssDriven", 
[ 
"NAME:Setup1", 
"SolveType:=" , "Single", 
"Frequency:=" , INSERT_FREQUENCY , 
"MaxDeltaS:=" , 0.02, 
"UseMatrixConv:=" , False, 
"MaximumPasses:=" , 6, 
"MinimumPasses:=" , 1, 
"MinimumConvergedPasses:=", 1, 
"PercentRefinement:=" , 30, 
"IsEnabled:=" , True, 
[ 
"NAME:MeshLink", 
"ImportMesh:=" , False 
], 
"BasisOrder:=" , 1, 
"DoLambdaRefine:=" , True, 
"DoMaterialLambda:=" , True, 
"SetLambdaTarget:=" , False, 
"Target:=" , 0.3333, 
"UseMaxTetIncrease:=" , False, 
"PortAccuracy:=" , 2, 
"UseABCOnPort:=" , False, 
"SetPortMinMaxTri:=" , False, 
"DrivenSolverType:=" , "Direct Solver", 
"EnhancedLowFreqAccuracy:=", False, 
"SaveRadFieldsOnly:=" , False, 
"SaveAnyFields:=" , True, 
"IESolverType:=" , "Auto", 
"LambdaTargetForIESolver:=", 0.15, 
"UseDefaultLambdaTgtForIESolver:=", True, 
"IE Solver Accuracy:=" , "Balanced", 
"InfiniteSphereSetup:=" , "" 
]) 
oModule.InsertFrequencySweep("Setup1", 
[ 
"NAME:Sweep", 
"IsEnabled:=" , True, 
"RangeType:=" , "LinearCount", 
"RangeStart:="		, INSERT_RANGE_START ,
"RangeEnd:="		, INSERT_RANGE_END ,
"RangeCount:=" , INSERT_RANGE_COUNT_INT , 
"Type:=" , "Interpolating", 
"SaveFields:=" , False, 
"SaveRadFields:=" , False, 
"InterpTolerance:=" , 0.5, 
"InterpMaxSolns:=" , 250, 
"InterpMinSolns:=" , 0, 
"InterpMinSubranges:=" , 1, 
"InterpUseS:=" , True, 
"InterpUsePortImped:=" , True, 
"InterpUsePropConst:=" , True, 
"UseDerivativeConvergence:=", False, 
"InterpDerivTolerance:=", 0.2, 
"UseFullBasis:=" , True, 
"EnforcePassivity:=" , True, 
"PassivityErrorTolerance:=", 0.0001, 
"EnforceCausality:=" , False, 
"SMatrixOnlySolveMode:=", "Auto" 
]) 
